# Annex B (informative) Use of SARIF by issue log viewers { - }

It is frequently useful for an end user to view the issues detected by a static analysis tool
in the context of the programming artifacts in which they occur.
An issue log viewer is a program that allows an end user to do this.

Typically, the user opens a log file in the viewer, which presents a list of the issues in the log file.
When the user selects an issue from the list, the viewer opens the displays the source code from the file specified in the issue,
and displays information about the issue in the vicinity of the region where the issue occurred.
For example, the viewer might interleave issue information between lines of source code.

There are various reasons why a viewer need want to know the type of information contained in a source file that it displays:

1.	If the viewer knows the programming language, it can provide services such as syntax highlighting.

2.	If the issue occurs in a source file that is nested within (for example) a compressed container file,
then the viewer needs to know the file type of the container so that it can extract the source file.

There are various ways that a viewer might obtain file type information.
In the SARIF format, the `mimeType` property of the `physicalLocationComponent` object provides this information.
In the absence of the `mimeType` property, a viewer can fall back to examining the filename extension, for example "`.zip`".
It is recommended that the static analysis tool provide the `mimeType` property
(which it must know, because it was able to interpret the file in which it detected the issue),
rather than forcing the viewer to rely on a file name extension.

